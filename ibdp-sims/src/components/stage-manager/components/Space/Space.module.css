/* Style for the Space container component */
.Space {
  position: relative; /* Position context for absolute positioning of child elements */
  perspective: 800px; /* Perspective for 3D effects on staged windows */
}

/* Style for the container holding window components within the Space, using display: contents to avoid extra DOM element */
.Space_windows {
  display: contents; /* Allows children to behave as if they are direct children of the Space component */
}

/* Style for the staged windows area on the side of the Space */
.Space_stageds {
  position: absolute; /* Positioned absolutely relative to the Space container */
  top: 0px;
  left: 0px;
  display: flex; /* Use flexbox for layout */
  flex-direction: column; /* Stack staged windows vertically */
  flex-wrap: nowrap; /* Prevent wrapping of staged windows */
  justify-content: flex-start; /* Align items to the start of the container */
  align-items: center; /* Center items horizontally */
  width: 150px; /* Fixed width for the staged windows area */
  height: 100%; /* Full height of the Space container */
  box-sizing: border-box; /* Include padding and border in element's total width and height */
  user-select: none; /* Prevent text selection in the staged area */
  -webkit-user-select: none;
  -moz-user-select: none;
  perspective: 20rem; /* Perspective for staged windows 3D effect */
  transition: all 0.5s; /* Smooth transition for opacity and pointer-events */
  overflow-y: auto; /* Enable vertical scrolling if content overflows */
  padding: 50px 10px; /* Padding around staged windows */
  -ms-overflow-style: none; /* Hide scrollbar for IE and Edge */
  scrollbar-width: none; /* Hide scrollbar for Firefox */
}
/* Hide scrollbar for Chrome, Safari and Opera */
.Space_stageds::-webkit-scrollbar {
  display: none;
}
/* Pseudo-elements to ensure full height for flexbox layout in staged area */
.Space_stageds::before,
.Space_stageds::after {
  content: "";
  flex: 1 0 auto;
  min-height: 0;
}

/* Style to hide stageds area when autoHideStageds is enabled */
.Space.Space__autoHideStageds .Space_stageds {
  pointer-events: none; /* Disable interaction with staged windows when hidden */
  opacity: 0; /* Make staged windows area transparent */
}
/* Style to show stageds area when Space__showStageds is enabled, overriding autoHide if both classes are present */
.Space.Space__showStageds .Space_stageds,
.Space.Space__autoHideStageds.Space__showStageds .Space_stageds {
  pointer-events: all; /* Enable interaction with staged windows */
  opacity: 1; /* Make staged windows area opaque */
}

/* Style for the snapping indicator in the Space */
.Space_snap {
  display: flex; /* Use flexbox for layout */
  position: absolute; /* Positioned absolutely within the Space */
  align-items: center; /* Center items vertically */
  justify-content: center; /* Center items horizontally */
  flex-direction: column; /* Arrange items in a column */
  gap: 5px; /* Spacing between snap elements */
}
/* Animation for the snapping indicator to appear */
.Space_snap.Space_snap__show {
  animation: SnappingHorizontalAppear 0.25s
    cubic-bezier(0.68, -0.55, 0.265, 1.75) forwards;
}
/* Animation for the snapping indicator when snapped */
.Space_snap.Space_snap__snapped {
  animation: SnappingHorizontalAppear 0.25s
    cubic-bezier(0.68, -0.55, 0.265, 1.75) forwards;
}

/* Style for the mover element of the snapping indicator */
.Space_snap_mover {
  position: relative; /* Position context for absolute positioning */
  width: 10px;
  height: 10px;
  border-radius: 100%; /* Make it circular */
  background: white;
  border-radius: 20px;
  transition: all 0.5s; /* Smooth transition for changes */
  cursor: move; /* Indicate draggable element */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25); /* Shadow for depth */
  animation: SnappingHorizontalBottomToTop 0.75s
    cubic-bezier(0.68, -0.55, 0.265, 1.75) forwards; /* Entrance animation */
}

/* Style for the resizer element of the snapping indicator */
.Space_snap_resizer {
  position: relative; /* Position context for absolute positioning */
  width: 50%; /* Relative width to parent */
  max-width: 10px; /* Maximum width to limit size */
  height: 50px;
  background: white;
  border-radius: 20px;
  transition: all 0.5s; /* Smooth transition for changes */
  cursor: ew-resize; /* Indicate horizontal resize cursor */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.25); /* Shadow for depth */
  animation: SnappingHorizontalTopToBottom 0.33s
    cubic-bezier(0.68, -0.55, 0.265, 1.75); /* Entrance animation */
}

/* Set transform origin for scaling and rotation animations */
.Space_snap_resizer,
.Space_snap_mover {
  transform-origin: center;
}

/* Keyframe animation for snapping indicator appearance */
@keyframes SnappingHorizontalAppear {
  0% {
    scale: 0; /* Start with no scale */
  }
  100% {
    scale: 1; /* End at normal scale */
  }
}

/* Keyframe animation for mover element entrance */
@keyframes SnappingHorizontalBottomToTop {
  0% {
    transform: translateY(50px); /* Start below normal position */
  }
  100% {
    transform: translateY(0%); /* End at normal position */
  }
}

/* Keyframe animation for resizer element entrance */
@keyframes SnappingHorizontalTopToBottom {
  0% {
    transform: translateY(-50px); /* Start above normal position */
  }
  100% {
    transform: translateY(0px); /* End at normal position */
  }
}

/* Style for the SnapMover component, covering the mover area for interaction */
.SnapMover,
.SnapResizer {
  position: absolute; /* Cover the entire area of parent */
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
}