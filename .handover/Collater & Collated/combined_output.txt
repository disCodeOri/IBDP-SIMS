Combined files content generated on 2024-11-15 15:25:34
Comments have been removed from the source files


================================================================================
Directory: app
================================================================================

File: globals.css
--------------------------------------------------------------------------------

@tailwind base;
@tailwind components;
@tailwind utilities;
@import 'react-big-calendar/lib/css/react-big-calendar.css';
body {
  font-family: Arial, Helvetica, sans-serif;
}
@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}
@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;
    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;
    --primary: 222.2 47.4% 11.2%;
    --primary-foreground: 210 40% 98%;
    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;
    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;
    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;
    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 222.2 84% 4.9%;
    --chart-1: 12 76% 61%;
    --chart-2: 173 58% 39%;
    --chart-3: 197 37% 24%;
    --chart-4: 43 74% 66%;
    --chart-5: 27 87% 67%;
    --radius: 0.5rem;
  }
  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;
    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;
    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;
    --primary: 210 40% 98%;
    --primary-foreground: 222.2 47.4% 11.2%;
    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;
    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;
    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;
    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 212.7 26.8% 83.9%;
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;
  }
}
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

File: layout.tsx
--------------------------------------------------------------------------------

import type { Metadata } from "next";
import "./globals.css";
export const metadata: Metadata = {
  title: "Scheduler App",
  description: "A simple scheduler application",
};
export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" className="overflow-hidden">
      <body className={`antialiased bg-gray-100 min-h-screen text-gray-900`}>
          <main className="container mx-auto p-4">
            {children}
          </main>
      </body>
    </html>
  );
}

File: page.tsx
--------------------------------------------------------------------------------

"use client";
import React, { useState, useEffect } from 'react';
import SearchNavigation from '@/components/search-navigation';
export default function Home() {
  const [isLoading, setIsLoading] = useState(true);
  useEffect(() => {
    setIsLoading(false);
  }, []);
  if (isLoading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
      </div>
    );
  }
  return <SearchNavigation />;
}


================================================================================
Directory: hooks
================================================================================

File: use-keyboard-shortcuts.ts
--------------------------------------------------------------------------------

import { RefObject, useEffect } from 'react';
export const useSlashKey = (
  inputRef: RefObject<HTMLInputElement>,
  onOpen: (open: boolean) => void
) => {
  useEffect(() => {
    const handleKeyDown = (e: KeyboardEvent) => {
      if (e.key === "/" && (e.target as HTMLElement).tagName !== "INPUT") {
        e.preventDefault();
        inputRef.current?.focus();
        onOpen(true);
      }
    };
    document.addEventListener("keydown", handleKeyDown);
    return () => document.removeEventListener("keydown", handleKeyDown);
  }, [inputRef, onOpen]);
};

File: use-time.ts
--------------------------------------------------------------------------------

import { useState, useEffect } from 'react';
export const useTime = () => {
  const [currentTime, setCurrentTime] = useState('');
  useEffect(() => {
    const updateTime = () => {
      setCurrentTime(new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }));
    };
    updateTime();
    const timer = setInterval(updateTime, 1000);
    return () => clearInterval(timer);
  }, []);
  return currentTime;
};


================================================================================
Directory: types
================================================================================

File: command.ts
--------------------------------------------------------------------------------

import { RefObject } from 'react';
import { Page, QuickAction } from './navigation';
export interface CommandPaletteProps {
  isOpen: boolean;
  onOpenChange: (open: boolean) => void;
  inputRef: RefObject<HTMLInputElement>;
  onNavigation: (path: string) => void;
}
export interface CommandGroupProps {
  pages: Page[];
  actions: QuickAction[];
  onSelect: (path: string) => void;
}
export interface CommandShortcutsProps {
  shortcuts: Array<{ key: string; description: string }>;
}

File: navigation.ts
--------------------------------------------------------------------------------

import { LucideIcon } from 'lucide-react';
export interface Page {
  title: string;
  path: string;
  description: string;
}
export interface QuickAction {
  title: string;
  path?: string;
  icon: LucideIcon;
  description: string;
  action?: () => void;
}


================================================================================
Directory: app\scheduler
================================================================================

File: page.tsx
--------------------------------------------------------------------------------




================================================================================
Directory: components\search-navigation
================================================================================

File: index.tsx
--------------------------------------------------------------------------------

import React, { useRef, useState } from 'react';
import { LogOut } from 'lucide-react';
import { CommandPalette } from './command-palette';
import { KeyboardShortcuts } from './keyboard-shortcuts';
import { useSlashKey } from '@/hooks/use-keyboard-shortcuts';
const SearchNavigation = () => {
  const [open, setOpen] = useState(false);
  const inputRef = useRef<HTMLInputElement>(null);
  useSlashKey(inputRef, setOpen);
  const handleLogout = () => {
    window.location.href = '/';
  };
  const handleNavigation = (path: string) => {
    window.location.href = path;
  };
  return (
    <div className="flex items-start justify-center pt-32">
      <div className="w-full max-w-2xl">
        <div className="flex justify-end mb-4">
          <button
            onClick={handleLogout}
            className="flex items-center text-sm text-gray-500 hover:text-gray-700"
          >
            <LogOut className="h-4 w-4 mr-2" />
            Logout
          </button>
        </div>
        <CommandPalette
          isOpen={open}
          onOpenChange={setOpen}
          inputRef={inputRef}
          onNavigation={handleNavigation}
        />
        <KeyboardShortcuts />
      </div>
    </div>
  );
};
export default SearchNavigation;

File: keyboard-shortcuts.tsx
--------------------------------------------------------------------------------

import React from 'react';
export const KeyboardShortcuts = () => (
  <div className="mt-4 flex justify-center space-x-4 text-sm text-gray-500">
    <span>
      <kbd className="px-2 py-1 bg-gray-100 border border-gray-200 rounded">↑↓</kbd>{' '}
      to navigate
    </span>
    <span>
      <kbd className="px-2 py-1 bg-gray-100 border border-gray-200 rounded">enter</kbd>{' '}
      to select
    </span>
    <span>
      <kbd className="px-2 py-1 bg-gray-100 border border-gray-200 rounded">esc</kbd>{' '}
      to close
    </span>
  </div>
);


================================================================================
Directory: config\navigation
================================================================================

File: pages.ts
--------------------------------------------------------------------------------

import { Page } from '@/types/navigation';
export const pages: Page[] = [
  { title: 'Scheduler', path: '/scheduler', description: 'Manage your tasks and calendar' },
  { title: 'Note Taker', path: '/notes', description: 'Take and organize your study notes' },
  { title: 'University', path: '/university', description: 'Track university applications and deadlines' },
  { title: 'Sports Tracker', path: '/sports', description: 'Monitor your triathlon, Muay Thai, and fitness progress' },
  { title: 'Mental Health', path: '/mental-health', description: 'Track your well-being and relaxation activities' },
  { title: 'Analytics', path: '/analytics', description: 'View your performance metrics and insights' }
];

File: quick-actions.ts
--------------------------------------------------------------------------------

import { QuickAction } from '@/types/navigation';
import { Search, Calendar, History, Keyboard } from 'lucide-react';
export const quickActions: QuickAction[] = [
  { title: 'Today\'s Tasks', path: '/scheduler/today', icon: Calendar, description: 'View today\'s scheduled items' },
  { title: 'Recent Activity', path: '/history', icon: History, description: 'View your recent actions' },
  { title: 'Quick Search', icon: Search, description: 'Search across all your content', action: () => {} },
  { title: 'Keyboard Shortcuts', icon: Keyboard, description: 'View all keyboard shortcuts', action: () => {} }
];


================================================================================
Directory: data\scheduler
================================================================================

File: sched-data.json
--------------------------------------------------------------------------------




================================================================================
Directory: components\search-navigation\command-palette
================================================================================

File: command-groups.tsx
--------------------------------------------------------------------------------

import React from 'react';
import { CommandGroup, CommandItem } from '@/components/ui/command';
import { ArrowRight, Home, Settings, User } from 'lucide-react';
export const NavigationGroup = ({ onSelect }: { onSelect: (path: string) => void }) => (
  <CommandGroup heading="Navigation">
    {[
      { icon: Home, title: 'Home', path: '/' },
      { icon: User, title: 'Profile', path: '/profile' },
      { icon: Settings, title: 'Settings', path: '/settings' }
    ].map(({ icon: Icon, title, path }) => (
      <CommandItem
        key={path}
        value={title}
        onSelect={() => onSelect(path)}
        className="flex items-center justify-between py-3"
      >
        <div className="flex items-center">
          <Icon className="h-4 w-4 mr-2" />
          <span className="font-medium text-sm">{title}</span>
        </div>
        <ArrowRight className="h-4 w-4 text-blue-500 opacity-0 group-aria-selected:opacity-100" />
      </CommandItem>
    ))}
  </CommandGroup>
);

File: command-input.tsx
--------------------------------------------------------------------------------

import React from 'react';
import { CommandInput } from '@/components/ui/command';
interface CommandSearchProps {
  inputRef: React.RefObject<HTMLInputElement>;
  onOpen: (open: boolean) => void;
}
export const CommandSearch = ({ inputRef, onOpen }: CommandSearchProps) => (
  <CommandInput
    ref={inputRef}
    placeholder="Search pages... (Press '/' to focus)"
    className="h-12"
    onFocus={() => onOpen(true)}
    onBlur={() => {
      setTimeout(() => onOpen(false), 200);
    }}
    onKeyDown={(e) => {
      if (e.key === "Escape") {
        inputRef.current?.blur();
        onOpen(false);
      }
    }}
  />
);

File: index.tsx
--------------------------------------------------------------------------------

import React from 'react';
import { Command, CommandList, CommandEmpty, CommandSeparator, CommandGroup, CommandItem } from '@/components/ui/command';
import { CommandSearch } from './command-input';
import { NavigationGroup } from './command-groups';
import { pages } from '@/config/navigation/pages';
import { quickActions } from '@/config/navigation/quick-actions';
import { CommandPaletteProps } from '@/types/command';
import { useTime } from '@/hooks/use-time';
import { ArrowRight } from 'lucide-react';
export const CommandPalette = ({ isOpen, onOpenChange, inputRef, onNavigation }: CommandPaletteProps) => {
  const currentTime = useTime();
  return (
    <Command className="rounded-xl shadow-md overflow-visible">
      <div className="relative">
        <CommandSearch inputRef={inputRef} onOpen={onOpenChange} />
      </div>
      {isOpen && (
        <CommandList>
          <CommandEmpty>No results found.</CommandEmpty>
          <div className="px-3 py-2 text-xs text-muted-foreground">
            {currentTime} - Quick Access Menu
          </div>
          <CommandGroup heading="Pages">
            {pages.map((page) => (
              <CommandItem
                key={page.path}
                value={page.title}
                onSelect={() => onNavigation(page.path)}
                className="flex items-center justify-between py-3"
              >
                <div>
                  <p className="font-medium text-sm">{page.title}</p>
                  <p className="text-sm text-gray-500">{page.description}</p>
                </div>
                <ArrowRight className="h-4 w-4 text-blue-500 opacity-0 group-aria-selected:opacity-100" />
              </CommandItem>
            ))}
          </CommandGroup>
          <CommandSeparator className="my-2" />
          <CommandGroup heading="Quick Actions">
            {quickActions.map((action) => (
              <CommandItem
                key={action.title}
                value={action.title}
                onSelect={() => action.path ? onNavigation(action.path) : action.action?.()}
                className="flex items-center justify-between py-3"
              >
                <div className="flex items-center">
                  <action.icon className="h-4 w-4 mr-2" />
                  <div>
                    <p className="font-medium text-sm">{action.title}</p>
                    <p className="text-xs text-gray-500">{action.description}</p>
                  </div>
                </div>
                <ArrowRight className="h-4 w-4 text-blue-500 opacity-0 group-aria-selected:opacity-100" />
              </CommandItem>
            ))}
          </CommandGroup>
          <CommandSeparator className="my-2" />
          <NavigationGroup onSelect={onNavigation} />
        </CommandList>
      )}
    </Command>
  );
};

